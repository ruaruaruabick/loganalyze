{"sent1": {"content": "Initializing Spring embedded WebApplicationContext", "entities": []}, "sent2": {"content": "Tomcat <*> <*> port(s) 80 (http)", "entities": []}, "sent3": {"content": "Mapped \"{[/carts/{customerId .*}/items/{itemId .*}] methods [GET] produces [application/json]}\" onto public works.weave.socks.cart.entities.Item works.weave.socks.cart.controllers.ItemsController.get(java.lang.String java.lang.String)", "entities": []}, "sent4": {"content": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b40d5f0 startup date [Fri Nov 01 07 00 57 GMT 2019]; parent org.springframework.context.annotation.AnnotationConfigApplicationContext@51521cc1", "entities": []}, "sent5": {"content": "Mapped \"{[/{repository}/{id}] methods [HEAD] produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation java.io.Serializable org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException", "entities": []}, "sent6": {"content": "Mapped <*> methods <*> produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public <*> <*> <*> <*> <*> <*> <*>", "entities": []}, "sent7": {"content": "Mapped \"{[/{repository}/{id}] methods [PATCH] produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation org.springframework.data.rest.webmvc.PersistentEntityResource java.io.Serializable org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler org.springframework.data.rest.webmvc.support.ETag java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException org.springframework.data.rest.webmvc.ResourceNotFoundException", "entities": []}, "sent8": {"content": "Mapped \"{[/{repository}/{id}] methods [PUT] produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation org.springframework.data.rest.webmvc.PersistentEntityResource java.io.Serializable org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler org.springframework.data.rest.webmvc.support.ETag java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException", "entities": []}, "sent9": {"content": "Monitor thread successfully connected to server with description ServerDescription{address carts-db 27017 type STANDALONE state CONNECTED ok true version ServerVersion{versionList [4 2 1]} minWireVersion 0 maxWireVersion 8 maxDocumentSize 16777216 roundTripTimeNanos <*>", "entities": []}, "sent10": {"content": "Mapped \"{[/{repository}/{id}/{property}] methods [PATCH || PUT || POST] consumes [application/json || application/x-spring-data-compact+json || text/uri-list] produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation org.springframework.http.HttpMethod org.springframework.hateoas.Resources<java.lang.Object> java.io.Serializable java.lang.String) throws java.lang.Exception", "entities": []}, "sent11": {"content": "Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type Consider declaring such methods as 'static'.", "entities": []}, "sent12": {"content": "Overriding bean definition for bean 'managementServletContext' with a different definition replacing [Root bean class [null]; scope ; abstract false; lazyInit false; autowireMode 3; dependencyCheck 0; autowireCandidate true; primary false; factoryBeanName org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName managementServletContext; initMethodName null; destroyMethodName (inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean class [null]; scope ; abstract false; lazyInit false; autowireMode 3; dependencyCheck 0; autowireCandidate true; primary false; factoryBeanName org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName managementServletContext; initMethodName null; destroyMethodName (inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]", "entities": []}, "sent13": {"content": "Starting service Tomcat", "entities": []}, "sent14": {"content": "BeanFactory id 5e44614a-7369-3438-a326-d1b2bda21648", "entities": []}, "sent15": {"content": "Detected <*> <*> in <*>", "entities": []}, "sent16": {"content": "Mapping <*> <*> to <*>", "entities": []}, "sent17": {"content": "Root WebApplicationContext initialization completed in 67333 ms", "entities": []}, "sent18": {"content": "Registering beans for JMX exposure on startup", "entities": []}, "sent19": {"content": "Loading properties file from class path resource [rest-default-messages.properties]", "entities": []}, "sent20": {"content": "Mapped <*> methods <*> onto public <*> <*>", "entities": []}, "sent21": {"content": "Started CartApplication in 197.748 seconds (JVM running for 266.136)", "entities": []}, "sent22": {"content": "Opened connection [connectionId{localValue <*> serverValue <*> to carts-db 27017", "entities": []}, "sent23": {"content": "Exception in monitor thread while connecting to server carts-db 27017", "entities": []}, "sent24": {"content": "Bean with name <*> has been autodetected for JMX exposure", "entities": []}, "sent25": {"content": "No active profile set falling back to default profiles default", "entities": []}, "sent26": {"content": "Located managed bean <*> registering with JMX server as MBean <*> name <*> type <*>", "entities": []}, "sent27": {"content": "Mapped <*> methods <*> produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public <*> <*>", "entities": []}, "sent28": {"content": "Looking for @ControllerAdvice org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b40d5f0 startup date [Fri Nov 01 07 00 57 GMT 2019]; parent org.springframework.context.annotation.AnnotationConfigApplicationContext@51521cc1", "entities": []}, "sent29": {"content": "Cluster created with settings {hosts [carts-db 27017] mode SINGLE requiredClusterType UNKNOWN serverSelectionTimeout '10000 ms' maxWaitQueueSize 500}", "entities": []}, "sent30": {"content": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@51521cc1 startup date [Fri Nov 01 07 00 26 GMT 2019]; root of context hierarchy", "entities": []}, "sent31": {"content": "Mapped \"{[/{repository}/search/{search}] methods <*> produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public org.springframework.http.ResponseEntity<java.lang.Object> <*> java.lang.String)", "entities": []}, "sent32": {"content": "Located managed bean 'configurationPropertiesRebinder' registering with JMX server as MBean [org.springframework.cloud.context.properties name configurationPropertiesRebinder context 1b40d5f0 type ConfigurationPropertiesRebinder]", "entities": []}, "sent33": {"content": "Bean <*> of type [class <*> is not eligible for getting processed by all BeanPostProcessors (for example not eligible for auto-proxying)", "entities": []}, "sent34": {"content": "Mapped <*> methods <*> produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public <*> <*> <*> <*> <*> <*> <*> <*>", "entities": []}, "sent35": {"content": "Initializing ExecutorService", "entities": []}, "sent36": {"content": "Mapped <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>", "entities": []}, "sent37": {"content": "Mapped <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>", "entities": []}, "sent38": {"content": "Mapped \"{[/{repository}] methods <*> produces <*> || <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> org.springframework.web.HttpRequestMethodNotSupportedException", "entities": []}, "sent39": {"content": "Starting beans in phase 0", "entities": []}, "sent40": {"content": "Starting Servlet Engine Apache Tomcat/8.5.11", "entities": []}, "sent41": {"content": "Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)", "entities": []}, "sent42": {"content": "Mapped \"{[/profile] methods [GET]}\" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()", "entities": []}, "sent43": {"content": "Mapped <*> <*> <*> <*> <*> <*> <*> <*>", "entities": []}, "sent44": {"content": "Mapped URL path <*> onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]", "entities": []}, "sent45": {"content": "Mapped <*> <*> <*> <*> <*> onto public <*> <*>", "entities": []}, "sent46": {"content": "Mapped \"{[/heapdump || /heapdump.json] methods [GET] produces [application/octet-stream]}\" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean javax.servlet.http.HttpServletRequest javax.servlet.http.HttpServletResponse) throws java.io.IOException javax.servlet.ServletException", "entities": []}, "sent47": {"content": "Mapped \"{[/{repository}/{id}/{property}] methods [GET] produces [application/x-spring-data-compact+json || text/uri-list]}\" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation java.io.Serializable java.lang.String org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception", "entities": []}, "sent48": {"content": "Mapped \"{[/{repository}/search/{search}] methods [GET] produces [application/x-spring-data-compact+json]}\" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation org.springframework.util.MultiValueMap<java.lang.String java.lang.Object> java.lang.String java.lang.String org.springframework.data.rest.webmvc.support.DefaultedPageable org.springframework.data.domain.Sort org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)", "entities": []}, "sent49": {"content": "Mapped \"{[/ || ] methods <*> produces [application/hal+json || application/json || application/*+json;charset UTF-8]}\" onto public <*> <*>", "entities": []}}